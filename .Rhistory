library(readr)
library(Amelia)
library(ggplot2)
# 提取loc列为"location[i]"的行
loc_i <- location1[1]
mae.1 <- mae %>%
filter(loc == loc_i)
# # 筛选出所有 day 列为 "Friday" 的行，并选择 number 列
# numbers_fri <- mae.1 %>%
#   filter(day == "Friday") %>%
#   pull(number)
#
# # 计算分位数
# quantiles_fri <- quantile(numbers_fri, probs = c(0.25, 0.5, 0.75))
#
# # 打印结果
# print(quantiles_fri)
# 定义分位数
quantiles <- c(0.25, 0.5, 0.75)
# 计算分位数并将结果存放到数据框中
result_quan <- mae.1 %>%
group_by(day) %>%
summarise(across(number, list(
Q1 = ~ quantile(., quantiles[1]),
Median = ~ quantile(., quantiles[2]),
Q3 = ~ quantile(., quantiles[3])
))) %>%
pivot_longer(-day, names_to = c("metric"), values_to = "value") %>%
pivot_wider(names_from = metric, values_from = value)
# 将 "day" 列转换为因子型变量，并设置因子级别顺序
result_quan$day <- factor(result_quan$day, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# 查看结果
print(result_quan)
# 可视化分位数结果
ggplot(result_quan, aes(x = day, y = value, color = metric)) +
geom_point() +
geom_line(aes(group = metric)) +
labs(title = "Quantiles of 'number' by 'day'",
x = "Day",
y = "Value",
color = "Quantile") +
theme_minimal()
result_quan
# 提取loc列为"location[i]"的行
loc_i <- location1[1]
mae.1 <- mae %>%
filter(loc == loc_i)
# # 筛选出所有 day 列为 "Friday" 的行，并选择 number 列
# numbers_fri <- mae.1 %>%
#   filter(day == "Friday") %>%
#   pull(number)
#
# # 计算分位数
# quantiles_fri <- quantile(numbers_fri, probs = c(0.25, 0.5, 0.75))
#
# # 打印结果
# print(quantiles_fri)
# 定义分位数
quantiles <- c(0.25, 0.5, 0.75)
# 计算分位数并将结果存放到数据框中
result_quan <- mae.1 %>%
group_by(day) %>%
summarise(across(number, list(
Q1 = ~ quantile(., quantiles[1]),
Median = ~ quantile(., quantiles[2]),
Q3 = ~ quantile(., quantiles[3])
))) %>%
pivot_longer(-day, names_to = c("metric"), values_to = "value") %>%
pivot_wider(names_from = metric, values_from = value)
# 将 "day" 列转换为因子型变量，并设置因子级别顺序
result_quan$day <- factor(result_quan$day, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# 查看结果
print(result_quan)
# 将数据转换为长格式
result_long <- result_quan %>%
pivot_longer(cols = starts_with("number_"), names_to = "quantile", values_to = "value")
# 可视化分位数结果
ggplot(result_long, aes(x = day, y = value, color = quantile)) +
geom_point(size = 3) +
geom_line(aes(group = quantile), size = 1) +
labs(title = "Quantiles of 'number' by 'day'",
x = "Day",
y = "Value",
color = "Quantile") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 提取loc列为"location[i]"的行
loc_i <- location1[1]
mae.1 <- mae %>%
filter(loc == loc_i)
# 使用ggplot2包绘制箱线图
ggplot(mae.1, aes(x = day, y = number)) +
geom_boxplot() +
labs(title = "Boxplot of 'number' by 'day'",
x = "Day",
y = "Number") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 旋转x轴标签
# 提取loc列为"location[i]"的行
loc_i <- location1[1]
mae.1 <- mae %>%
filter(loc == loc_i)
# 将 "day" 列转换为因子型变量，并设置因子级别顺序
mae.1$day <- factor(mae.1$day, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# 使用ggplot2包绘制箱线图
ggplot(mae.1, aes(x = day, y = number)) +
geom_boxplot() +
labs(title = "Boxplot of 'number' by 'day'",
x = "Day",
y = "Number") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 旋转x轴标签
# 提取loc列为"location[i]"的行
loc_i <- location1[1]
mae.1 <- mae %>%
filter(loc == loc_i)
# 将 "day" 列转换为因子型变量，并设置因子级别顺序
mae.1$day <- factor(mae.1$day, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# 使用ggplot2包绘制箱线图
ggplot(mae.1, aes(x = day, y = number)) +
geom_boxplot() +
labs(title = "Boxplot of 'number' by 'day'",
x = "Day",
y = "Number") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 旋转x轴标签
quantiles <- mae.1 %>%
group_by(day) %>%
summarise(
Min = min(number),
Q1 = quantile(number, 0.25),
Median = median(number),
Q3 = quantile(number, 0.75),
Max = max(number)
)
# 打印分位数结果
print(quantiles)
# 使用ggplot2包绘制箱线图
ggplot(mae.1, aes(x = week, y = number)) +
geom_boxplot() +
labs(title = "Boxplot of 'number' by 'day'",
x = "Week",
y = "Number") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 旋转x轴标签
quantiles <- mae.1 %>%
group_by(week) %>%
summarise(
Min = min(number),
Q1 = quantile(number, 0.25),
Median = median(number),
Q3 = quantile(number, 0.75),
Max = max(number)
)
# 打印分位数结果
print(quantiles)
# 使用ggplot2包绘制箱线图
ggplot(mae.1, aes(x = week, y = number)) +
geom_boxplot() +
labs(title = "Boxplot of 'number' by 'week'",
x = "Week",
y = "Number") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 旋转x轴标签
quantiles <- mae.1 %>%
group_by(week) %>%
summarise(
Min = min(number),
Q1 = quantile(number, 0.25),
Median = median(number),
Q3 = quantile(number, 0.75),
Max = max(number)
)
# 打印分位数结果
print(quantiles)
# 使用ggplot2包绘制箱线图
ggplot(mae.1, aes(x = inout, y = number)) +
geom_boxplot() +
labs(title = "Boxplot of 'number' by 'inout'",
x = "Inout",
y = "Number") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 旋转x轴标签
quantiles <- mae.1 %>%
group_by(inout) %>%
summarise(
Min = min(number),
Q1 = quantile(number, 0.25),
Median = median(number),
Q3 = quantile(number, 0.75),
Max = max(number)
)
# 打印分位数结果
print(quantiles)
---
title: "PHS_data_GAM"
# 使用ggplot2包绘制箱线图
ggplot(mae.1, aes(x = hour, y = number)) +
geom_boxplot() +
labs(title = "Boxplot of 'number' by 'hour'",
x = "Hour",
y = "Number") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 旋转x轴标签
quantiles_hour <- mae.1 %>%
group_by(hour) %>%
summarise(
Min = min(number),
Q1 = quantile(number, 0.25),
Median = median(number),
Q3 = quantile(number, 0.75),
Max = max(number)
)
# 打印分位数结果
print(quantiles_hour)
setwd("/Users/l/Desktop/Edinburgh/Dissertation/Session1_PHS/Data_Code")
data4 <- read.csv("GP_practices_and_list_sizes.csv")
head(data4)
setwd("/Users/l/Desktop/Edinburgh/Dissertation/Session1_PHS/Data_Code")
data4 <- read.csv("GP_practices_and_list_sizes.csv")
gpinform <- data4c[,c(2,3,4,13,14,15,16)]
setwd("/Users/l/Desktop/Edinburgh/Dissertation/Session1_PHS/Data_Code")
data4 <- read.csv("GP_practices_and_list_sizes.csv")
gpinform <- data4[,c(2,3,4,13,14,15,16)]
head(data4)
setwd("/Users/l/Desktop/Edinburgh/Dissertation/Session1_PHS/Data_Code")
data4 <- read.csv("GP_practices_and_list_sizes.csv")
gpinform <- data4[,c(2,3,4,13,14,15,16)]
head(gpinform)
library(dplyr)
library(ggplot2)
library(readr)
library(Amelia)
# library(readxl)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 100, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency")
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 100, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency")
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 10000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency")
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency")
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 5000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency")
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency")
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency") +
scale_x_continuous(breaks = seq(0, max(gpinform$PracticeListSize, na.rm = TRUE), by = 1000))
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency") +
scale_x_continuous(breaks = seq(0, max(gpinform$PracticeListSize, na.rm = TRUE), by = 10))
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency") +
scale_x_continuous(breaks = seq(0, max(gpinform$PracticeListSize, na.rm = TRUE), by = 10000))
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency") +
scale_x_continuous(breaks = seq(0, max(gpinform$PracticeListSize, na.rm = TRUE), by = 1000))
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency") +
scale_x_continuous(breaks = seq(0, max(gpinform$PracticeListSize, na.rm = TRUE), by = 500))
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency") +
scale_x_continuous(breaks = seq(0, max(gpinform$PracticeListSize, na.rm = TRUE), by = 500))
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency") +
scale_x_continuous(breaks = seq(0, max(gpinform$PracticeListSize, na.rm = TRUE), by = 5000))
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 可视化 PracticeListSize 列数据的分布
ggplot(gpinform, aes(x = PracticeListSize)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of PracticeListSize", x = "PracticeListSize", y = "Frequency") +
scale_x_continuous(breaks = seq(0, max(gpinform$PracticeListSize, na.rm = TRUE), by = 2500))
# 计算CDF
ggplot(gpinform, aes(x = PracticeListSize)) +
stat_ecdf(geom = "step") +
labs(title = "CDF of PracticeListSize", x = "PracticeListSize", y = "CDF") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
# 绘制箱型图
ggplot(gpinform, aes(y = PracticeListSize)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot of PracticeListSize", y = "PracticeListSize")
# 记录相关统计数据
practice_list_size_summary <- summary(gpinform$PracticeListSize)
print(practice_list_size_summary)
# 根据 PracticeListSize 列的值创建新的 GPType 列
gpinform <- gpinform %>%
mutate(GPType = case_when(
PracticeListSize < 2500 ~ "Small",
PracticeListSize >= 2500 & PracticeListSize <= 10000 ~ "Medium",
PracticeListSize > 10000 ~ "Large"
))
# 根据 PracticeListSize 列的值创建新的 GPType 列
gpinform <- gpinform %>%
mutate(GPType = case_when(
PracticeListSize < 2500 ~ "Small",
PracticeListSize >= 2500 & PracticeListSize <= 10000 ~ "Medium",
PracticeListSize > 10000 ~ "Large"
))
head(gpinform)
# 根据 PracticeListSize 列的值创建新的 GPType 列
gpinform <- gpinform %>%
mutate(GPType = case_when(
PracticeListSize < 2500 ~ "Small",
PracticeListSize >= 2500 & PracticeListSize <= 10000 ~ "Medium",
PracticeListSize > 10000 ~ "Large"
))
head(gpinform)
# 绘制 GPType 列的频率分布直方图
ggplot(gpinform, aes(x = GPType)) +
geom_bar(fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Frequency Distribution of GPType", x = "GPType", y = "Frequency")
# 计算各类型的频数
gptype_counts <- gpinform %>%
group_by(GPType) %>%
summarise(count = n())
# 绘制 GPType 列的饼状图
ggplot(gptype_counts, aes(x = "", y = count, fill = GPType)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Pie Chart of GPType") +
theme_void() +
theme(legend.title = element_blank())
